"use client"
import { Arsenal } from 'next/font/google';
import './globals.css';
import { usePathname, useRouter } from 'next/navigation'; // To handle routes
import { useEffect, useState } from 'react'; // For authentication checks

import Footer from './components/footer/Footer';
import Navbar from './components/navbar/Navbar';
// import AdminSidebar from '../components/admin/AdminSidebar';
// import AdminHeader from '../components/admin/AdminHeader';

// Font setup
const arsenal = Arsenal({
  subsets: ['latin'],
  weight: ['400', '700'],
});

// export const metadata = {
//   title: 'Create Next App',
//   description: 'Generated by create next app',
// };

// Mocked function to check authentication status and admin role
const getUser = () => {
  // Here, implement the logic to check if the user is authenticated and if they're admin.
  // For example, check if token is present and decode user info.
  const user = typeof window !== 'undefined' ? JSON.parse(localStorage.getItem('user')) : null;
  return user; // Return user object or null if not logged in
};

export default function RootLayout({ children }) {
  const pathname = usePathname();
  const router = useRouter();
  const [user, setUser] = useState(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    // Simulate fetching user details (e.g., from localStorage or API)
    const fetchedUser = getUser();
    setUser(fetchedUser);
    setLoading(false); // Finish loading
  }, []);

  useEffect(() => {
    // Admin route protection logic
    const isAdminRoute = pathname.startsWith('/admin');

    if (!loading) {
      if (isAdminRoute) {
        // Redirect if not logged in
        if (!user) {
          router.push('/admin-login'); // Redirect to admin login page if not logged in
        } else if (user && !user.isAdmin) {
          router.push('/'); // Redirect to public route if logged in but not admin
        }
      }
    }
  }, [pathname, user, loading, router]);

  if (loading) return <p>Loading...</p>; // Show a loading screen while checking auth

  const isAdminRoute = pathname.startsWith('/admin');

  return (
    <html lang="en">
      <body className={arsenal.className}>
        {isAdminRoute ? (
          user?.isAdmin && (
            <>
            <h1>Hello</h1>
              {/* <AdminHeader /> */}
              <div className="flex">
                <h2>Hiii</h2>
                {/* <AdminSidebar /> */}
                <main className="flex-grow p-6">{children}</main>
              </div>
            </>
          )
        ) : (
          <>
            <Navbar /> {/* Public route */}
            {children}
            <Footer />
          </>
        )}
      </body>
    </html>
  );
}
